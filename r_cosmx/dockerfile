# Use images from rocker
FROM bioconductor/bioconductor_docker:3.18

# Add environment variables
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8

# Install ubuntu packages
RUN apt-get update \
    && apt-get install -y -f --no-install-recommends python3-pip \
    && apt-get install -y -f --no-install-recommends python3-venv

# Install R packages
RUN Rscript -e "install.packages('BiocManager')" -e "library('BiocManager')"
RUN Rscript -e "install.packages('remotes')" -e "library('remotes')"
RUN Rscript -e "install.packages('devtools')" -e "library('devtools')"
RUN Rscript -e "install.packages('magick')" -e "library('magick')"
RUN Rscript -e "install.packages('harmony')" -e "library('harmony')"
RUN Rscript -e "install.packages('circlize')" -e "library('circlize')"
RUN Rscript -e "install.packages('ggalluvial')" -e "library('ggalluvial')"
RUN Rscript -e "install.packages('ggbeeswarm')" -e "library('ggbeeswarm')"
RUN Rscript -e "install.packages('tidyverse')" -e "library('tidyverse')"
RUN Rscript -e "install.packages('ggrastr')" -e "library('ggrastr')"
RUN Rscript -e "install.packages('randomcoloR')" -e "library('randomcoloR')"
RUN Rscript -e "install.packages('lmerTest')" -e "library('lmerTest')"
RUN Rscript -e "BiocManager::install('GenomicRanges')" -e "library('GenomicRanges')"
RUN Rscript -e "BiocManager::install('BSgenome')" -e "library('BSgenome')"
RUN Rscript -e "BiocManager::install('ComplexHeatmap')" -e "library('ComplexHeatmap')"
RUN Rscript -e "BiocManager::install('limma')" -e "library('limma')"
RUN Rscript -e "BiocManager::install('edgeR')" -e "library('edgeR')"
RUN Rscript -e "BiocManager::install('scater')" -e "library('scater')"
RUN Rscript -e "BiocManager::install('scDblFinder')" -e "library('scDblFinder')"
RUN Rscript -e "BiocManager::install('fgsea')" -e "library('fgsea')"
RUN Rscript -e "BiocManager::install('BSgenome.Hsapiens.UCSC.hg38')" -e "library('BSgenome.Hsapiens.UCSC.hg38')"
RUN Rscript -e "BiocManager::install('infercnv')" -e "library('infercnv')"
RUN Rscript -e "BiocManager::install('TFBSTools')" -e "library('TFBSTools')"
RUN Rscript -e "BiocManager::install('motifmatchr')" -e "library('motifmatchr')"
RUN Rscript -e "BiocManager::install('slingshot')" -e "library('slingshot')"
RUN Rscript -e "BiocManager::install('tradeSeq')" -e "library('tradeSeq')"
RUN Rscript -e "BiocManager::install('clusterExperiment')" -e "library('clusterExperiment')"
RUN Rscript -e "BiocManager::install('ggtree')" -e "library('ggtree')"
RUN Rscript -e "BiocManager::install('chromVAR')" -e "library('chromVAR')"
RUN Rscript -e "BiocManager::install('org.Hs.eg.db')" -e "library('org.Hs.eg.db')"
RUN Rscript -e "BiocManager::install('BSgenome.Hsapiens.UCSC.hg19')" -e "library('BSgenome.Hsapiens.UCSC.hg19')"
RUN Rscript -e "remotes::install_github('immunogenomics/presto')" - "library('presto')"
RUN Rscript -e "remotes::install_github('GreenleafLab/chromVARmotifs')" -e "library('chromVARmotifs')"
RUN Rscript -e "remotes::install_github('satijalab/seurat-wrappers')"
RUN Rscript -e "remotes::install_github('mojaveazure/seurat-disk')"
RUN Rscript -e "remotes::install_github('davidsjoberg/ggsankey')" -e "library('ggsankey')"
RUN Rscript -e "remotes::install_github('satijalab/azimuth')" -e "library('Azimuth')"
RUN Rscript -e "remotes::install_github('ajiangsfu/PRPS')" -e "library('PRPS')"
RUN Rscript -e "remotes::install_github('jinworks/CellChat')" -e "library('CellChat')"
# RUN Rscript -e "remotes::install_github('morinlab/GAMBLR.helpers')" -e "library('GAMBLR.helpers')"
# RUN Rscript -e "remotes::install_github('morinlab/GAMBLR.data')" -e "library('GAMBLR.data')"
# RUN Rscript -e "remotes::install_github('morinlab/GAMBLR.utils')" -e "library('GAMBLR.utils')"
# RUN Rscript -e "remotes::install_github('morinlab/GAMBLR.viz')" -e "library('GAMBLR.viz')"
# RUN Rscript -e "remotes::install_github('morinlab/GAMBLR.results')" -e "library('GAMBLR.results')"
# RUN Rscript -e "remotes::install_github('morinlab/GAMBLR')" -e "library('GAMBLR')"

# Clear cache
RUN apt-get clean \
    && rm -rf /var/lib/apt/lists/*